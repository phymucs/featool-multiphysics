{"meta":{"app":"FEATool Multiphysics","author":"Precise Simulation","build":"1.9.1","date":"14-Feb-2019","descr":["This example models resistive Joule heating where the resulting current from an applied electric potential will heat a thin spiral shaped Tungsten wire, such as can be found in incandescent light bulbs. The filament reaches an equilibrium temperature where the internal heat generation is balanced by radiative heat loss through the boundaries.","","Two physics modes are involved, conductive media DC for the electric potential _V_, and heat transfer for the temperature _T_. Since the coupling is one way where only the heat transfer source term depends on the potential, the model will be solved in two steps. First for the electric potential, and then for the temperature using the pre-calculated potential, this saves computational time."],"dim":3,"image":"resistive_heating1.jpg","keyw":["joule_heating","cad_import"],"mlver":"R2019a","name":"resistive_heating1","phys":["Conductive Media DC","Heat Transfer"],"system":"","time":737471,"title":"Resistive Heating in a Tungsten Filament","type":"Multiphysics","user":"precsim","ver":[1,9,1]},
"fields":["type","id","ui_arg","fcn_type","fcn_oarg"],
"data":[
["uipushtool","Standard.NewFigure",{},"ClickedCallback",{}],
["uicontrol","radio_3d",1,"Callback",{}],
["uicontrol","popup_physsel",["Conductive Media DC"],"Callback",{}],
["uicontrol","button_dlgnew_ok",{},"Callback",{}],
["uitext*",[],"The filament geometry will be imported from an STL file Instead of creating it with the built-in CAD tools."],
["uitext",[],"Select **Import Geometry > STL Format..** from the _Geometry_ menu, and choose the _resistive_heating1.stl_ file to import."],
["uimenu*",["Geometry","Import Geometry","STL Format..."],{},"Callback","resistive_heating1.stl"],
["uitext",[],"The STL file has been prepared with each boundary in a separate STL section. _Automatic feature and boundary detection_ is therefore not required, uncheck the corresponding checkbox to disable this. Leave the other settings at their default values and press **OK** to import the geometry."],
["uicontrol*","stl_autobdr",0,"Callback",{}],
["uicontrol*","stl_extend",0,"Callback",{}],
["uicontrol*","button_dlgimpstl_ok",{},"Callback",{}],
["uicontrol","button_grid_mode",1,"Callback",{}],
["uitext*",[],"The built-in grid generator does not support imported CAD geometries so the external _Gmsh_ grid generator is recommended (_Gmsh_ will automatically be downloaded and installed if not available when selected)."],
["uicontrol","grid_settings",{},"Callback",{}],
["uicontrol","grid_settings_algo",[" Gmsh"],"Callback",{}],
["uicontrol","grid_settings_hmax","5e-4","Callback",{}],
["uicontrol","button_dlggrid_generate",{},"Callback",{}],
["uicontrol","button_dlggrid_ok",{},"Callback",{}],
["uicontrol","button_equation_mode",1,"Callback",{}],
["uicontrol","s_dc","1/52.8e-9","Callback",{}],
["uicontrol","tab_+",0,"Callback",{}],
["uicontrol","popup_physsel",["Heat Transfer"],"Callback",{}],
["uicontrol","button_addphys",{},"Callback",{}],
["uicontrol","rho_ht","19.25e3","Callback",{}],
["uicontrol","cp_ht","133.9776","Callback",{}],
["uicontrol","k_ht","173","Callback",{}],
["uitext",[],"Enter the expression `1/52.8e-9*(Vx^2+Vy^2+Vz^2)` for the temperature source term, effectively coupling the gradient of the electric potential to the temperature field."],
["uicontrol*","q_ht","1/52.8e-9*(Vx^2+Vy^2+Vz^2)","Callback",{}],
["uitext",[],"In the first step, only the potential _V_ will be solved for, so deactivate the temperature by clicking on the **Active** button. This will deactivate a selected physics mode in the specific subdomains, or here deactivate it completely."],
["uicontrol*","toggle_active_ht",0,"Callback",{}],
["uicontrol","button_dlgeqn_ok",{},"Callback",{}],
["uicontrol","button_boundary_mode",1,"Callback",{}],
["uitext*",[],"Apply a potential difference of _0.2 V_ between the two ends."],
["uicontrol","list_seldom",["57","58"],"Callback",{}],
["uicontrol","popup_selbc_dc",["Electric potential"],"Callback",{}],
["uicontrol","edit_bccoef1_dc","0","Callback",{}],
["uicontrol","list_seldom",["58"],"Callback",{}],
["uicontrol","edit_bccoef1_dc","0.2","Callback",{}],
["uicontrol","tab_ht",0,"Callback",{}],
["uitext",[],"To specify the radiative boundary condition, select **Heat flux** for all but the end boundaries and enter the coefficient for the radiative _Constant_ and surrounding ambient temperature _Tamb_."],
["uicontrol*","list_seldom",["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56"],"Callback",{}],
["uicontrol*","popup_selbc_ht",["Heat flux"],"Callback",{}],
["uicontrol","edit_bccoef4_ht","5.670367e-8","Callback",{}],
["uicontrol","edit_bccoef5_ht","80+273.15","Callback",{}],
["uitext*",[],"The end boundaries are assumed held at room temperature."],
["uicontrol","list_seldom",["57","58"],"Callback",{}],
["uicontrol","popup_selbc_ht",["Temperature"],"Callback",{}],
["uicontrol","edit_bccoef1_ht","20+273.15","Callback",{}],
["uicontrol","button_dlgbdr_ok",{},"Callback",{}],
["uitext",[],"Now that the problem is fully specified, press the **Solve** _Mode Toolbar_ button to switch to solve mode. Then press the **=** _Tool_ button to call the solver and solve for the active potential field."],
["uicontrol*","button_solve_mode",1,"Callback",{}],
["uicontrol*","button_solve",{},"Callback",{}],
["uitext*",[],"After the problem has been solved FEATool will automatically switch to postprocessing mode and here display the computed electric potential."],
["uitext*",[],"To solve for the temperature field, switch back to _Equation_ mode activate the heat transfer physics mode and de-activate the electric potential."],
["uicontrol*","button_equation_mode",1,"Callback",{}],
["uicontrol","toggle_active_dc",0,"Callback",{}],
["uicontrol","tab_ht",0,"Callback",{}],
["uicontrol","toggle_active_ht",1,"Callback",{}],
["uicontrol","button_dlgeqn_ok",{},"Callback",{}],
["uicontrol","button_solve_mode",1,"Callback",{}],
["uitext*",[],"The current solution has to be used as initial guess to use the computed potential since it is deactivated, also decrease the _Non-linear relaxation parameter_ to help with convergence."],
["uicontrol","button_solver_settings",{},"Callback",{}],
["uicontrol","init1",1,"Callback",{}],
["uicontrol","nlrlx","0.8","Callback",{}],
["uicontrol","button_dlgsolversettings_solve",{},"Callback",{}],
["uitext*",[],"After the solver has converged, plot the temperature and verify that the maximum temperature is around _690_."],
["uicontrol","button_post_settings",{},"Callback",{}],
["uicontrol","post_surf",["Temperature, T"],"Callback",{}],
["uicontrol","button_dlgpost_ok",{},"Callback",{}],
["imgcap"],
["uivalidate",[],"pass=0;try,T_max_ref = 688;[~,T_max]=minmaxsubd('T',fea);err=abs(T_max-T_max_ref)/T_max_ref;pass=err<0.01;catch,end"]
]}
